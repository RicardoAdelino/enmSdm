% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/interpolateRasters.r
\name{interpolateRasters}
\alias{interpolateRasters}
\title{Interpolate a stack of rasters}
\usage{
interpolateRasters(r, x, where, method = "linear", ...)
}
\arguments{
\item{r}{Raster stack.}

\item{x}{Numeric vector, one value per raster in \code{r}. Values represent "distance" along the set of rasters rasters (e.g., time).}

\item{where}{Numeric vector, values of "distances" at which to interpolate the rasters.}

\item{method}{Either \code{'linear'} or \code{'spline'}. The \code{\link[stats]{approx}} function is used for linear interpolation and \code{\link[stats]{spline}} for spline-based interpolation.}

\item{...}{Other arguments passed to \code{\link[stats]{approx}} or \code{\link[stats]{spline}}.}
}
\value{
A raster stack, one per element in \code{where}.
}
\description{
This function returns a stack of rasters interpolated from a stack of rasters. For example, the input might represent rasters of a process measured at times t, t + 1, and t + 4. The rasters at t + 2 and t + 3 could be interpolated based on the values in the other rasters.
}
\examples{
x <- c(1, 3, 4, 8)

rx <- raster(nrows=10, ncols=10)
r1 <- setValues(rx, 1:100)
r3 <- setValues(rx, 100:1)
r4 <- setValues(rx, 100:1 - 30)
r8 <- setValues(rx, runif(100))
r <- stack(r1, r3, r4, r8)
names(r) <- paste0('r', x)

where <- c(2, 5, 6, 7, 8, 9)
linear <- interpolateRasters(r, x, where)
splines <- interpolateRasters(r, x, where, method='spline')
plot(r)
x11()
plot(linear)
x11()
plot(spline)
}
\seealso{
\code{\link[raster]{approxNA}}, \code{\link[stats]{approx}}, \code{\link[stats]{spline}}
}
